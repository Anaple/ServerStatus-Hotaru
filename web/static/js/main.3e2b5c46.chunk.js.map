{"version":3,"sources":["components/Card.jsx","components/Header.jsx","components/table.jsx","components/footer.jsx","components/Body.jsx","reportWebVitals.js","index.jsx"],"names":["Meta","Card","ServerCard","Statistic","Countdown","props","style","width","avatar","src","title","description","disabled","percent","cpu","ram","rom","value","network_all","suffix","up","valueStyle","color","prefix","ArrowUpOutlined","down","ArrowDownOutlined","date","Header","theme","mode","defaultSelectedKeys","Item","columns","dataIndex","key","render","status","table","scroll","x","dataSource","data","copyright","links","href","blankTarget","GithubOutlined","Content","Layout","Sider","React","Component","prototype","$axios","axios","Body","state","server","this","createtable","justify","gutter","xs","sm","md","lg","createcard","intervalId","setInterval","getjson","get","then","res","setState","servers","c","map","item","network_in","Math","round","network_out","hdd","hdd_total","hdd_used","memory_total","memory_used","swap","swap_total","swap_used","name","online4","address","location","uptime","load","network","network_rx","network_tx","region","online6","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e2b5c46.chunk.js","sourcesContent":["import {Card ,Avatar,Progress ,Col, Statistic} from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nconst {Meta} = Card;\nconst {Countdown} = Statistic;\nconst ServerCard = (props) => {\n\n    return (\n        <Col>\n        <Card\n        style={{ width: 300 }}\n       \n        \n        \n      >\n        <Meta\n          avatar={<Avatar src= {props.avatar} />}\n          title={props.title}\n          description={props.description}\n        />\n         CPU：\n         <Progress disabled={props.disabled} percent={props.cpu} />\n         RAM：\n         <Progress disabled={props.disabled} percent={props.ram} />\n         ROM：\n         <Progress disabled={props.disabled} percent={props.rom} />\n         <Statistic disabled={props.disabled} title=\"已使用流量\" value={props.network_all} suffix=\"MB\" />\n         <Statistic\n            disabled={props.disabled}\n            title=\"上传\"\n            value={props.up}\n        \n            valueStyle={{ color: '#3f8600' }}\n            prefix={<ArrowUpOutlined />}\n            suffix=\"KB\"\n          />\n          <Statistic disabled={props.disabled}\n            title=\"下载\"\n            value={props.down}\n            valueStyle={{ color: '#cf1322' }}\n            prefix={<ArrowDownOutlined />}\n            suffix=\"KB\"\n          />\n        <Statistic disabled={props.disabled}\n        title=\"运行时间\"\n        value={props.date}>\n            \n        </Statistic>\n\n      </Card>\n      </Col>\n      \n  \n  \n    );\n  \n  }\n\nexport default ServerCard;","import { Menu } from 'antd';\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst Header =()=>{\n    return(\n    <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['logo']}>\n        <Menu.Item key=\"logo\">Server Status</Menu.Item>\n    </Menu>\n    )\n\n}\nexport default Header","import { Table, Tag, Space } from 'antd';\nconst columns = [\n    {\n      title: '运行状态',\n      dataIndex: 'status',\n      key: 'status',\n      render: status => {if(status===false){\n          return <Tag color='red'>维护中</Tag>\n          \n      }else{\n          return <Tag color='geekblue'>正在运行</Tag>\n      }\n    },\n    },\n    {\n      title: '节点名称',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '服务器位置',\n      dataIndex: 'address',\n      key: 'address',\n    },\n    {\n      title:'在线时间',\n      dataIndex:'uptime',\n      key:'uptime',\n    },\n    {\n      title:'负载',\n      dataIndex:'load',\n      key:'load',\n        \n    },\n    { title:'实时网络',\n      dataIndex:'network',\n      key:'network',\n    },\n    {\n      title:'入站总流量',\n      dataIndex:'network_in',\n      key:'network_in',\n    },\n    {\n      title:'出站总流量',\n      dataIndex:'network_out',\n      key:'network_out',\n    },\n    {\n      title:'RAM',\n      dataIndex:'ram',\n      key:'ram',\n    },\n    {\n      title:'SWAP',\n      dataIndex:'swap',\n      key:'swap',\n    },\n    {\n      title:'硬盘',\n      dataIndex:'hdd',\n      key:'hdd',\n    },\n    \n    /*{\n      title: 'Tags',\n      key: 'tags',\n      dataIndex: 'tags',\n      render: tags => (\n        <>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={color} key={tag}>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </>\n      ),\n    },*/\n    \n    ];\nconst table =(props)=>{\n    return <Table columns={columns} scroll={{ x: 'max-content' }}dataSource={props.data}></Table>\n}\nexport default table;\n    ","import React from 'react';\nimport { GithubOutlined } from '@ant-design/icons';\nimport { DefaultFooter } from '@ant-design/pro-layout';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n  <DefaultFooter\n    copyright=\"ServerStatus-Hotaru/Anaple\"\n    links={[\n      {\n        key: 'Server Status',\n        title: 'Server Status',\n        href: 'https://github.com/CokeMine/ServerStatus-Hotaru',\n        blankTarget: true,\n      },\n      {\n        key: 'github',\n        title: <GithubOutlined />,\n        href: 'https://github.com/Anaple/antd-theme',\n        blankTarget: true,\n      },\n      {\n        key: 'Ant Design',\n        title: 'Ant Design',\n        href: 'https://ant.design',\n        blankTarget: true,\n      },\n    ]}\n  />\n);\n","import ServerCard from './Card';\nimport React from 'react'\nimport axios from 'axios';\nimport {Layout,Row} from 'antd';\nimport NavHeader from'./Header';\nimport Table from  './table';\nimport './body.css';\nimport Footer from './footer';\nconst { Header , Sider, Content } = Layout;\nReact.Component.prototype.$axios=axios\nclass Body extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            server:[],\n        }\n    }\n    render(){\n        return(\n            <Layout>\n            \n            <NavHeader/>\n           \n            <Layout>\n            \n          \n            \n           \n            <Content>\n            {this.createtable()}\n            <Row justify=\"center\" gutter={[16, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\n            {this.createcard()}\n            </Row>\n            </Content>\n            \n            </Layout>\n            <Footer/>\n            </Layout>\n        )\n    }\n    componentDidMount() {\n        this.intervalId = setInterval(() => {\n            this.getjson();\n            \n        }, 2000);\n\n    }\n\n    getjson(){\n        axios.get('json/stats.json').then((res)=>{\n            this.setState({\n                server:res.data.servers,\n            })\n            \n        })\n        \n    }\n    createtable(){\n        var data =[];\n        var c =0\n        this.state.server.map(item =>{\n            const network_in = Math.round(((item.network_in)/1024/1024))+\" MB \";\n            const network_out = Math.round(((item.network_out)/1024/1024))+\" MB \";\n            const hdd = \"总共 \"+Math.round(((item.hdd_total)))+\" MB\"+\" | \"+\"已用\"+Math.round(((item.hdd_used)))+\" MB\";\n            const ram = \"总共 \"+Math.round(((item.memory_total))/1024)+\" MB\"+\" | \"+\"已用\"+Math.round(((item.memory_used))/1024)+\" MB\";\n            const swap = \"总共 \"+Math.round(((item.swap_total))/1024)+\" MB\"+\" | \"+\"已用\"+Math.round(((item.swap_used))/1024)+\" MB\";\n            data=[...data, {key: c++,name:item.name,status:item.online4,address:item.location,uptime:item.uptime,load:item.load,network:item.network_rx+\" B | \"+item.network_tx+\" B\",network_in:network_in,network_out:network_out,hdd:hdd,ram:ram,swap:swap}]   \n        })\n        return <Table data={data}></Table>\n        \n    }\n    createcard(){\n        return this.state.server.map(item =>{\n            const ram =Math.round((item.memory_used / item.memory_total * 100));\n            const rom =Math.round((item.hdd_used / item.hdd_total * 100));\n            const up = Math.round((item.network_rx /1024));\n            const down = Math.round((item.network_tx /1024));\n            const network_all = Math.round(((item.network_in+item.network_out)/1024/1024));\n            const avatar = \"/clients/\"+item.region+\".png\"\n            if(item.online4&&item.online6 === false){\n                //在线机器\n                return(\n                <ServerCard avatar={avatar}title={item.name} cpu={item.cpu} ram={ram} rom={rom} description={item.type} up={up} down={down} network_all={network_all} date={item.uptime}/>\n                )\n            }\n            else{\n                //掉线机器\n            /*return(\n                <ServerCard avatar={avatar} title={item.name} cpu={item.cpu} ram={ram} rom={rom} description={item.type} disabled={true} up={up} down={down} network_all={network_all} date={item.uptime}/>\n            )*/\n            }\n            \n        }\n        )\n    }\n  \n}\nexport default Body;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/Body';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}